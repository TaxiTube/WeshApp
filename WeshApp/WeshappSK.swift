//
//  WeshappSK.swift
//  Weshapp
//
//  Created by SM on 1/20/15.
//  Copyright (c) 2015 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class WeshappSK : NSObject {

    //// Drawing Methods

    public class func drawCanvas1(#frame: CGRect) {
        //// Color Declarations
        let buttonColor = UIColor(red: 1.000, green: 0.349, blue: 0.349, alpha: 1.000)
        let arrowPickColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let arrowLineColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)


        //// Subframes
        let frame2 = CGRectMake(frame.minX + floor(frame.width * 0.43467 + 0.5), frame.minY + floor(frame.height * 0.00000 + 0.5), floor(frame.width * 0.59467 + 0.5) - floor(frame.width * 0.43467 + 0.5), floor(frame.height * 1.00000 + 0.5) - floor(frame.height * 0.00000 + 0.5))


        //// button Drawing
        var buttonPath = UIBezierPath()
        buttonPath.moveToPoint(CGPointMake(frame.minX + 0.00000 * frame.width, frame.minY + -0.00000 * frame.height))
        buttonPath.addLineToPoint(CGPointMake(frame.minX + 1.00000 * frame.width, frame.minY + -0.00000 * frame.height))
        buttonPath.addLineToPoint(CGPointMake(frame.minX + 1.00000 * frame.width, frame.minY + 1.00000 * frame.height))
        buttonPath.addLineToPoint(CGPointMake(frame.minX + 0.00000 * frame.width, frame.minY + 1.00000 * frame.height))
        buttonPath.addLineToPoint(CGPointMake(frame.minX + 0.00000 * frame.width, frame.minY + -0.00000 * frame.height))
        buttonPath.closePath()
        buttonColor.setFill()
        buttonPath.fill()


        //// Arrow Pick Drawing
        var arrowPickPath = UIBezierPath()
        arrowPickPath.moveToPoint(CGPointMake(frame2.minX + 0.50867 * frame2.width, frame2.minY + 0.33974 * frame2.height))
        arrowPickPath.addLineToPoint(CGPointMake(frame2.minX + 0.67534 * frame2.width, frame2.minY + 0.51920 * frame2.height))
        arrowPickPath.addLineToPoint(CGPointMake(frame2.minX + 0.65867 * frame2.width, frame2.minY + 0.53714 * frame2.height))
        arrowPickPath.addLineToPoint(CGPointMake(frame2.minX + 0.49200 * frame2.width, frame2.minY + 0.35768 * frame2.height))
        arrowPickPath.addLineToPoint(CGPointMake(frame2.minX + 0.50867 * frame2.width, frame2.minY + 0.33974 * frame2.height))
        arrowPickPath.closePath()
        arrowPickPath.moveToPoint(CGPointMake(frame2.minX + 0.49200 * frame2.width, frame2.minY + 0.68839 * frame2.height))
        arrowPickPath.addLineToPoint(CGPointMake(frame2.minX + 0.65867 * frame2.width, frame2.minY + 0.50893 * frame2.height))
        arrowPickPath.addLineToPoint(CGPointMake(frame2.minX + 0.67534 * frame2.width, frame2.minY + 0.52688 * frame2.height))
        arrowPickPath.addLineToPoint(CGPointMake(frame2.minX + 0.50867 * frame2.width, frame2.minY + 0.70634 * frame2.height))
        arrowPickPath.addLineToPoint(CGPointMake(frame2.minX + 0.49200 * frame2.width, frame2.minY + 0.68839 * frame2.height))
        arrowPickPath.closePath()
        arrowPickColor.setFill()
        arrowPickPath.fill()


        //// Arrow Line Drawing
        var arrowLinePath = UIBezierPath()
        arrowLinePath.moveToPoint(CGPointMake(frame2.minX + 0.34329 * frame2.width, frame2.minY + 0.51035 * frame2.height))
        arrowLinePath.addLineToPoint(CGPointMake(frame2.minX + 0.64329 * frame2.width, frame2.minY + 0.51035 * frame2.height))
        arrowLinePath.addLineToPoint(CGPointMake(frame2.minX + 0.64329 * frame2.width, frame2.minY + 0.53535 * frame2.height))
        arrowLinePath.addLineToPoint(CGPointMake(frame2.minX + 0.34329 * frame2.width, frame2.minY + 0.53535 * frame2.height))
        arrowLinePath.addLineToPoint(CGPointMake(frame2.minX + 0.34329 * frame2.width, frame2.minY + 0.51035 * frame2.height))
        arrowLinePath.closePath()
        arrowLineColor.setFill()
        arrowLinePath.fill()
    }

    public class func drawCanvas2() {

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRectMake(25, 33, 180, 56))
        UIColor.grayColor().setFill()
        rectanglePath.fill()
    }

}

@objc protocol StyleKitSettableImage {
    func setImage(image: UIImage!)
}

@objc protocol StyleKitSettableSelectedImage {
    func setSelectedImage(image: UIImage!)
}
